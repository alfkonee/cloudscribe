@model  cloudscribe.Core.Web.ViewModels.SiteUser.LoginViewModel

@using System.Collections.Generic
@using Microsoft.AspNet.Http
@using Microsoft.AspNet.Http.Authentication


@{
    
}
@if (Model.RecaptchaSiteKey.Length > 0)
{
    <script src='https://www.google.com/recaptcha/api.js'></script>
}

<h2>@ViewData["Title"]</h2>
@if (Model.LoginInfoTop.Length > 0)
{
    <div class="row">
        <div class="col-md-12">
            @Html.Raw(Model.LoginInfoTop)
        </div>
    </div>
}
<div class="row">
    <div class="col-md-8">
        <section id="loginForm">
            <form asp-controller="Account" asp-action="Login" asp-route-returnurl="@ViewBag.ReturnUrl" method="post" class="form-horizontal" role="form">
                <h4>Use a local account to log in.</h4>
                <hr />
                <div asp-validation-summary="ValidationSummary.All" class="text-danger"></div>
                <div class="form-group">
                    <label asp-for="Email" class="col-md-2 control-label"></label>
                    <div class="col-md-10">
                        <input asp-for="Email" class="form-control" />
                        <span asp-validation-for="Email" class="text-danger"></span>
                    </div>
                </div>
                <div class="form-group">
                    <label asp-for="Password" class="col-md-2 control-label"></label>
                    <div class="col-md-10">
                        <input asp-for="Password" class="form-control" />
                        <span asp-validation-for="Password" class="text-danger"></span>
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <div class="checkbox">  
                            <label>
                                <input asp-for="RememberMe" /> Remember Me
                            </label>
                        </div>
                    </div>
                </div>
                @if (Model.RecaptchaSiteKey.Length > 0)
        {
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <div class="g-recaptcha" data-sitekey="@Model.RecaptchaSiteKey"></div>
                @Html.ValidationMessage("recaptchaerror", new { @class = "text-danger" })
            </div>
        </div>

        }
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Log in" class="btn btn-default" />
                    </div>
                </div>
                <p>
                    <a asp-action="Register">Register as a new user?</a>
                </p>
                <p>
                    <a asp-action="ForgotPassword">Forgot your password?</a>
                </p>
            </form>
        </section>
    </div>
    <div class="col-md-4">
        @{
            var LoginProviders = Model.ExternalAuthenticationList.ToList();
            if (LoginProviders.Count > 0)
            {
                <section id="socialLoginForm">
                    <h4>Use another service to log in.</h4>
                    <hr />
                    <form asp-controller="Account" asp-action="ExternalLogin" asp-route-returnurl="@ViewBag.ReturnUrl" method="post" class="form-horizontal" role="form">
                        <div id="socialLoginList">
                            <p>
                                @foreach (AuthenticationDescription p in LoginProviders)
                                {
                                    <button type="submit" class="btn btn-default" id="@p.AuthenticationScheme" name="provider" value="@p.AuthenticationScheme"
                                            title="Log in using your @p.DisplayName account">
                                        @p.AuthenticationScheme
                                    </button>
                                }
                            </p>
                        </div>
                    </form>
                </section>

            }
        }
    </div>
</div>
@if (Model.LoginInfoBottom.Length > 0)
{
    <div class="row">
        <div class="col-md-12">
            @Html.Raw(Model.LoginInfoBottom)
        </div>
    </div>
}
@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial"); }
}
